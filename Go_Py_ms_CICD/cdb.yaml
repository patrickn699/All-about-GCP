steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/front:1.0.1', 'frontend/.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/conv:1.0.0', 'conversion/.']
  #images: ['gcr.io/qwiklabs-gcp-00-856e53d43212/filec:1.0.4']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/front:1.0.1']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/conv:1.0.0']

#step 3
- name: 'gcr.io/cloud-builders/kubectl'
  args: 
  - '-c'
  - if [CONV != "True"]
    then
      'create service clusterip conv --tcp=9000'
    fi
#  - ['create', 'service', 'clusterip', 'conv', '--tcp', '9000']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=pn'
  
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['create', 'service', 'loadbalancer', 'front', '--tcp=', '8000:5000']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=pn'
  
#step 4
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['create', 'deployment' ,'conv','--image','=','gcr.io/$PROJECT_ID/conv:1.0.0']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=pn'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['create', 'deployment' ,'front','--image','=','gcr.io/$PROJECT_ID/front:1.0.1']
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=pn'
  
# push images to Google Container Registry with tags
images: [
   'gcr.io/$PROJECT_ID/conv:1.0.0',
   'gcr.io/$PROJECT_ID/front:1.0.1'
  ]



substitutions:
    CONV: "True"
    